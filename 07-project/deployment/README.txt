---------- Activating pipenv for the project deployment-----------
	$ source /home/ubuntu/.local/share/virtualenvs/deployment-r6REQ1xB/bin/activate

// Reviewer may need to 'pip install requests' to run scoring code and test.
// AWS "testuser" is created with credentials only to read model object from s3 bucket.
-------------------------------------- Batch Deployment------------------------------------------------
Create output directory if not already present. "scoring output" can be generated by modifying year and month 
Run following to do prediction scoring for year==2023 and month==3, RUN_ID=307dee98dcf84aeba7b600a806dec2db
	python score.py 2023 3 307dee98dcf84aeba7b600a806dec2db
Input_file = "https://divvy-tripdata.s3.amazonaws.com/202303-divvy-tripdata.zip"
Output_file = "/home/ubuntu/notebooks/07-project/deployment/output/202303_307dee98dcf84aeba7b600a806dec2db.csv"
Fully deployed Prefect workflow for batch scoring is created. 
Refer to score_deploy.py. It's a cron job scheduled to run at 3AM on 2nd of every month.

-------------------------------------- Web Service Deployment ------------------------------------------
1. Navigate to 'deployment' directory and build image as below.
	docker build -t chicago-divvy-bike-trip-prediction:v1 .
"Successfully tagged chicago-divvy-bike-trip-prediction-service:v1"

Now, run the docker container to start Flask Application on the 'gunicorn' server with 'testuser' credentials to access model in my s3 bucket
	docker run -it --rm -p 9696:9696 -e AWS_ACCESS_KEY_ID=AKIATUODTXQSE34GZUA2 -e AWS_SECRET_ACCESS_KEY=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 chicago-divvy-bike-trip-prediction-service:v1
2. In another terminal, run test.py to get the prediction from this service. Following are the examples.
	python test.py 23A 43B electric_bike member 2.5
	python test.py AT003 T213 classic_bike casual 1.4
	python test.py A122 B123 docked_bike member 3.6
// Arguments are 'start_station_id' (Char set), 'end_station_id' (Char set), 'rideable_type' ('electric/classic/docked_bike'), 
// 'member_casual' ('member' or 'casual'), and 'trip_distance' (in KMs).



